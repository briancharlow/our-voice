name: Deployment

on:
  push:
    branches:
      - main

jobs:
 test:
  runs-on: ubuntu-latest
  steps:
    - name: Get code
      uses: actions/checkout@v4

    - name: Load and cache dependencies
      uses: actions/cache@v3
      with:
        path: Client/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('Client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      working-directory: Client
      run: npm ci

    - name: Run Cypress Tests (Headless)
      id: run-tests
      working-directory: Client
      run: npm run test:ci || npm run test  # Try CI mode first, fallback to regular tests

    - name: Upload test report (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-test-report
        path: Client/cypress/results  # Ensure Cypress outputs results in this directory


  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: cd Client && npm ci

      - name: Build website
        run: cd Client && npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: Client/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: Client/dist

      - name: Output contents
        run: ls

      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucketName: voiceclientchvr
          distFiles: Client/dist

      - name: output link
        run: echo "${{steps.deploy.outputs.URL}}"
